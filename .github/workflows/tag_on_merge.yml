name: Tag on merge

on:
  pull_request:
    types:
      - closed

jobs:
  create_tag_and_draft_release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Draft Release
        id: create_release
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;
            const labels = (await github.issues.listLabelsOnIssue({ owner, repo, issue_number: prNumber })).data.map(label => label.name);
            const lastTag = (await github.repos.listTags({ owner, repo })).data.map(tag => tag.name).sort().pop();
            const baseString = lastTag.match(/[\d.]+-\d+/)[0];
            const parts = baseString.split('-')[0].split('.').map(Number);
            const lastTagNumber = parseInt(lastTag.match(/-(\d+)$/)?.[1]);
            const newTagNumber = isNaN(lastTagNumber) ? 1 : lastTagNumber + 1;
            if (labels.includes('upgrade')) {
              parts[0] += 1;
              parts[1] = 0;
              parts[2] = 0;
            } else if (labels.includes('enhancement') || labels.includes('dependencies')) {
              parts[1] += 1;
              parts[2] = 0;
            } else {
              parts[2] += 1;
            }
            const newTag = `${parts.join('.')}-${newTagNumber}`;
            const tagRef = await github.git.createRef({
              owner,
              repo,
              ref: `refs/tags/${newTag}`,
              sha: context.payload.pull_request.merge_commit_sha,
            });

  update_release_draft:
    needs: create_tag_and_draft_release
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_release:
    needs: update_release_draft
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Publish Release
        uses: actions/github-script@v4
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.repos.listReleases({
                owner,
                repo,
            });
            const draftRelease = releases.data.find(release => release.draft);
            const prNumber = context.payload.pull_request.number;
            const labels = (await github.issues.listLabelsOnIssue({ owner, repo, issue_number: prNumber })).data.map(label => label.name);
            if (draftRelease) {
                const lastTag = (await github.repos.listTags({ owner, repo })).data.map(tag => tag.name).sort().pop();

                await github.repos.updateRelease({
                    owner,
                    repo,
                    release_id: draftRelease.id,
                    tag_name: lastTag,
                    name: lastTag.trim().replace(/-/g, ' (') + ')',
                    draft: false,
                    prerelease: !labels.includes('release'),
                });
            }

  update_branch_release:
    needs: publish_release
    if: contains(github.event.pull_request.labels.*.name, 'release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: 'refs/heads/main'

      - name: Create and push branch
        run: |
          git checkout -b ${BRANCH_NAME} || git checkout ${BRANCH_NAME}
          git reset --hard origin/main
          git push --force origin ${BRANCH_NAME}
        env:
          BRANCH_NAME: latest-release

  sync_labels:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - uses: actions/checkout@v2
      - uses: micnncim/action-label-syncer@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          manifest: .github/labels.yml
          prune: true
